function [U,V,W] = genUVWinterationlists(tree, index)
%GENINTERATIONLIST Generate U,V and W interaction lists
%Inputs:
%   tree  : tree structure generated by Octree
%   index : nodeto compute interaction list for
%
%Output:
%   U : returns a column array off all nodes in U interaction list
%   V : returns a column array off all nodes in V interaction list
%   W : returns a column array off all nodes in W interaction list

nodeLevel = tree.binLevel(index);

%generate U
if isleaf(tree,index)
    U = find(nodeintersection(tree,index,(1:tree.binCount)') & isleaf(tree,(1:tree.binCount)'));
else
    U = [];
end


%generate V
parentIndex = tree.binParents(index);
parentNeigbours = find(nodeintersection(tree,parentIndex,(1:tree.binCount)') & (nodeLevel-1 >= tree.binLevel)');

parentNeigbours = setdiff(parentNeigbours, tree.binParents(parentNeigbours));

parentNeigboursChildren = getchildren(tree,parentNeigbours);
parentNeigboursChildren = parentNeigboursChildren(isleaf(tree,parentNeigboursChildren));
V = setdiff(parentNeigboursChildren,U);


% generate W
if isleaf(tree,index)
    neighbours = find(nodeintersection(tree,index,(1:tree.binCount)') & (nodeLevel >= tree.binLevel)');
    neighbours = setdiff(neighbours, tree.binParents(neighbours));

    neighbourChildren = getchildren(tree,neighbours);
    neighbourChildren = neighbourChildren(isleaf(tree,neighbourChildren));

    W = setdiff(neighbourChildren, U);
else
    W = [];
end
end

