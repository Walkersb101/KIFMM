function [surf] = gendownsurf(tree, index, resolution, shells)
%gendownsurf Generate downward corona with set resolution and rings
%   Generate a square corna with discritisation of
%   (resolution,resolution,resolution). Shells
%   determines the number of outer layers in the corona (1 gives a surface)
%Inputs:
%   tree       : Tree structure generated by Octree
%   index      : Index of node to generate upward surface
%   resolution : Number of discritisation points in each axis
%   shells      : Number of outer shells
%
%Output:
%   points     : (n,3) array of points on the outer shell


    coords = tree.nodeCorners(index,:);
    width = coords(4:6)- coords(1:3);
    nearboundary = [coords(1:3) - width coords(4:6) + width];
    
    x = linspace(nearboundary(1),nearboundary(4),resolution);
    y = linspace(nearboundary(2),nearboundary(5),resolution);
    z = linspace(nearboundary(3),nearboundary(6),resolution);

    [X,Y,Z] = meshgrid(x,y,z);

    X(shells+1:end-shells,shells+1:end-shells,shells+1:end-shells)= NaN;
    Y(shells+1:end-shells,shells+1:end-shells,shells+1:end-shells)= NaN;
    Z(shells+1:end-shells,shells+1:end-shells,shells+1:end-shells)= NaN;

    X=reshape(X(~isnan(X)),[],1);
    Y=reshape(Y(~isnan(Y)),[],1);
    Z=reshape(Z(~isnan(Z)),[],1);

    surf = [X Y Z];
 
end

